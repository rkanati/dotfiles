#
# Througout this config file, you can use several placeholders to construct
# strings that make reference to the entry you are currently downloading, the
# podcast name, etc. At the moment, these are the available placeholders:
#
# {link} the download link of the podcast entry
# {filename} the name of the file to be downloaded (which need not be the name
# under which you will save it locally)
# {directory} the directory which the file is to be downloaded to
# {fullpath} the concatenation of directory and filename
# {title} the title of the podcast entry
# {filename_title} just like {title}, but leaving only alphanumeric characters
# and the underscore, so as to have a sane filename.
# {date} the date of the podcast entry
# {podcasttitle} the title of the podcast
# {filename_podcasttitle} see above.
# {name} the name you use to refer to the podcast in greg
# {subtitle} a description of the feed
# {entrysummary} a summary of the podcast entry
#
# If you have chosen to install BeautifulSoup, which is an optional dependency,
# {subtitle} and {summary} will be converted from html to text. Otherwise, they
# will show the original html, sanitized by feedparser.
#
# Whenever you use a placeholder in this configfile, it will be substituted by
# whatever it refers to. The {date} placeholder, by default, will be
# substituted by the entry date in the format YYYY-MM-DD. If you want to change
# this, you can use the field date_format to specify a different format. For
# example, use
#
# date_format = %%d/%%m/%%y
#
# if you want {date} to be substituted by the entry date as dd/mm/yy.
# The syntax here is that of Python's strftime().
#
# (Note, though, the double percent sign (%) wherever you would have written a
# single %. This is needed to stop python's configparser from interpreting % as
# a variable.)
#

#
# The option under [DEFAULT] will be applied to all feeds, unless some specific
# feed configuration overrules it. For example, if the default download
# directory is "~/Podcasts", all feeds will be downloaded to this directory
# except for those that have a different Download directory in their section.
[DEFAULT]

# The following gives the name of the directory in which greg will store the
# information about feeds and the latest downloaded issues. This is the only
# option that cannot be overriden by specific podcasts -- that is, any "Data
# directory" field in a section below will not be read.
Data directory = ~/.local/share/greg/data
Download directory = ~/podcasts/
Create subdirectory = yes
subdirectory_name = {name}

#
# You can specify which metadata greg should fill out. The available options
# are:
#
# tag_title
# tag_artist
# tag_date
# tag_album-artist
# tag_album
# tag_track
# tag_track-total
# tag_disc
# tag_disc-total
# tag_grouping
# tag_composer
# tag_genre
# tag_comment
# tag_picture
# tag_sort-title
# tag_sort-artist
# tag_sort-album-artist
# tag_sort-album
# tag_sort-composer
#
Tag = yes
tag_artist = {podcasttitle}
tag_title  = {date} - {title}
tag_date   = {date}

file_to_tag = {date}-{filename_title}.mp3
downloadhandler = wget -q --show-progress {link} -O {directory}/{date}-{filename_title}.mp3

#
# firstsync = 1
# means that Greg will only download the latest podcast. Also,
#
# firstsync = all
# asks Greg to download every available podcast.
#
firstsync = 1

#
# If the feed has both video and audio enclosures, and you want them both,
# you'll add
#
# mime = audio, video
#
# The default is to download only audio files. Thus,
#
mime = audio

#
# Some feeds are abnormal in that they don't use enclosures. The following
# option, when set to "yes", instructs greg to ignore enclosures and simply
# return the entry link as {link}.
#
ignoreenclosures = no

#
# Some other feeds are abnormal in that they don't carry information about
# enclosure types. The following option, when set to "yes", instructs greg to
# ignore enclosure types and simply download every enclosure
#
notype = no

#
# Finally, you don't need to download every issue of a podcast. You can specify
# a condition such that greg will download an issue if and only if the issue
# meets it. The syntax here is Python's, but it should be straightforward:
# "and", "or" and "not" mean what they customarily mean, and "in" means that
# the string to its left is contained in the string to its right -- i.e.,
# "BBC" is in "BBC News".
#
# filter = "BBC" in "{title}" and "Lennon" not in "{title}"

#
# In the local version of this file, now you can add sections for individual
# feeds, if and when you need them. The name of the section should be the name
# you are using to refer to the feed in greg (i.e., one of the names that "greg
# list" returns):
#
# [MyFeed1]
# Download directory = ~/Documents/MyFeed1
# Tag = yes
#
# [MyFeed2]
#
# etc.
#
# In the global version of this file (that is, /etc/greg.conf) sections for
# individual feeds will not be read.
#

[coffeewithcomrades]
file_to_tag = {date}-{filename_title}.m4a
downloadhandler = wget -nv --show-progress {link} -O {directory}/{date}-{filename_title}.m4a
tag = no

